name: Deploy to Development

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ vars.AWS_REGION }}

    - name: Log in to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v2

    - name: Set image tag
      run: echo "IMAGE_TAG=frontend-dev:${GITHUB_SHA}" >> $GITHUB_ENV
    
    - name: Build and Push Docker Image
      run: |
        docker build -t ${{ env.IMAGE_TAG }} -f app/Dockerfile ./app
        docker tag ${{ env.IMAGE_TAG }} ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ vars.AWS_REGION }}.amazonaws.com/${{ env.IMAGE_TAG }}
        docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ vars.AWS_REGION }}.amazonaws.com/${{ env.IMAGE_TAG }}
    
    - name: Save image tag to SSM
      run: |
        aws ssm put-parameter \
          --name "/frontend/dev/image_tag" \
          --value "$IMAGE_TAG" \
          --type String \
          --overwrite

# will be done by terraform instead:

#    - name: Get ECS cluster and service names from SSM
#      run: |
#        CLUSTER_NAME=$(aws ssm get-parameter --name "/shared/dev/cluster_name" --query "Parameter.Value" --output text)
#        SERVICE_NAME=$(aws ssm get-parameter --name "/shared/dev/frontend_service_name" --query "Parameter.Value" --output text)
#    
#        echo "CLUSTER_NAME=$CLUSTER_NAME" >> $GITHUB_ENV
#        echo "SERVICE_NAME=$SERVICE_NAME" >> $GITHUB_ENV
#        
#    - name: ECS frontend service redeploy
#      run: |
#        aws ecs update-service \
#          --cluster "$CLUSTER_NAME" \
#          --service "$SERVICE_NAME" \
#          --force-new-deployment